@page
@model IndexModel
@using Microsoft.AspNetCore.Identity
@using Adele_Health_App.Areas.Identity.Data

@inject SignInManager<AdeleHealthAppUser> SignInManager
@inject UserManager<AdeleHealthAppUser> UserManager
@{
    ViewData["Title"] = "Home page";
    Layout = "_Layout";
}

<style>
    .main-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding-bottom: 100px;
        background-color: #FFF9F6;
        padding-left: 384px;
        width: calc(100% - 384px);
    }

    .message-name {
        font-size: 12px;
        font-weight: bold;
        color: #555;
        margin-bottom: 4px;
        display: block;
    }
    .greeting {
        font-size: 28px;
        font-weight: 600;
        margin-top: 20px;
        color: #2D2D2D;
    }

        .greeting .name {
            color: #007BFF;
            cursor: pointer;
        }

    .punctuation {
        color: #2D8CFF;
    }

    .reading-info {
        font-size: 16px;
        color: #777;
        display: flex;
        align-items: center;
        gap: 6px;
        margin-top: 4px;
    }

    .reading-info {
        font-size: 16px;
        color: #777;
        display: flex;
        align-items: center;
        gap: 6px;
        margin-top: 0px;
    }

    .reading-info-inline {
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #4B5563;
        margin-top: 8px;
    }

    .log-reading-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        border: 2px solid #004F71;
        color: #004F71;
        background-color: white;
        font-weight: 600;
        padding: 8px 14px;
        border-radius: 8px;
        margin-top: 20px;
        font-size: 16px;
    }

    .chat-box-container {
        position: fixed;
        bottom: 0;
        left: 384px;
        width: calc(100% - 384px);
        padding: 10px;
        background-color: #fff;
        z-index: 1000;
        max-height: 150px;
    }

    .chat-box {
        max-width: 700px;
        margin: 0 auto;
        margin-top: -100px;
    }

    .chat-box-styled {
        display: flex;
        align-items: center;
        padding: 12px;
        background: white;
        border-radius: 20px;
        box-shadow: 0 2px 3px rgba(0,0,0,0.2);
        max-width: 700px;
        margin: auto;
    }

    .chat-logo {
        width: 30px;
        height: 30px;
        margin-right: 8px;
    }

    .chat-form {
        display: flex;
        flex-grow: 1;
    }

    .chat-input {
        display: flex;
        align-items: center;
        background: #f6f6f6;
        border-radius: 20px;
        padding: 10px 16px;
        font-size: 16px;
        border: none;
        width: 100%;
    }

    .chat-disclaimer {
        text-align: center;
        font-size: 12px;
        color: #999;
        margin-top: 8px;
    }

    .send-button {
        background: none;
        border: none;
        font-size: 18px;
        color: #004F71;
        cursor: pointer;
        margin-left: 8px;
    }

    .message-wrapper {
        display: flex;
        align-items: flex-start;
        margin-bottom: 12px;
        max-width: 80%;
    }

        .message-wrapper.you {
            justify-content: flex-end;
        }

        .message-wrapper.assistant {
            justify-content: flex-start;
        }

    .message-bubble {
        padding: 10px 14px;
        font-size: 16px;
        line-height: 1.5;
        max-width: 100%;
        word-wrap: break-word;
        border-radius: 18px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.15);
        display: inline-block;
        margin-bottom: 8px; 
    }


    .message-wrapper.you .message-bubble {
        background-color: white;
        color: black;
    }

    .message-wrapper.assistant .message-bubble {
        background-color: #f1f1f1;
        color: black;
    }


    .header-icon {
        display: flex;
        justify-content: center;
        padding-top: 20px;
        margin-left: -14px;
    }
</style>

<div class="main-container" id="main-container">
    <div class="greeting">
        @if (SignInManager.IsSignedIn(User))
        {
            var user = UserManager.GetUserAsync(User).Result;
            var displayName = (!string.IsNullOrEmpty(user?.FirstName) && !string.IsNullOrEmpty(user?.LastName))
            ? user.FirstName
            : UserManager.GetUserName(User);
            <h2 class="greeting-text">
                Morning, <span class="name">@displayName<span class="punctuation">!</span></span>
            </h2>
        }
        else
        {
            <h2 class="greeting-text">
                Morning, <span class="name">User<span class="punctuation">!</span></span>
            </h2>
        }
    </div>

    <div class="reading-info">
        <i class="fas fa-clock" style="color: #9ca3af; margin-right: 3px; margin-bottom: 8px;"></i>
        <span style="margin-bottom: 10px;">
            Last reading:
            @if (Model.LastGlucoseReading == "None")
            {
                @Model.LastGlucoseReading
            }
            else
            {
                @Model.LastGlucoseReading
            }
            mg/dL
        </span>
    </div>
    <form method="get" asp-page="/Logging">
        <button type="submit" class="log-reading-btn">
            <span style="font-size: 20px;">+ Log a Reading</span>
        </button>
    </form>
</div>

<div class="chat-box-container">
    <div class="chat-box chat-box-styled">
        <img src="/images/sparklechat.png" alt="Logo" class="chat-logo">
        <form method="post" class="chat-form">
            <input type="text" name="UserMessage" placeholder="Ask AdeleAI about your health" class="chat-input" required />
            <button type="submit" class="send-button">➤</button>
        </form>
    </div>
    <div class="chat-disclaimer">
        This information is not medical advice. Always consult a qualified professional for health-related inquiries.
    </div>
</div>

<div id="chat-window" class="chat-window">
    @foreach (var chatMessage in Model.ChatHistory)
    {
        @if (chatMessage.Role == "assistant")
        {
            <span class="message-name">AdeleAI</span>
        }
        <div class="message-wrapper @(chatMessage.Role == "user" ? "you" : "assistant")">
            <div class="message-bubble">@chatMessage.Content</div>
        </div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const chatForm = document.querySelector(".chat-form");
        if (!chatForm) return;

        if (localStorage.getItem("chatActive") === "true") {
            hideUIElements();
        }

        chatForm.addEventListener("submit", function () {
            localStorage.setItem("chatActive", "true"); 
            hideUIElements();
        });

        function hideUIElements() {
            const mainContainer = document.getElementById("main-container");
            if (mainContainer) mainContainer.style.display = "none";

            const logReadingButton = document.querySelector(".log-reading-btn");
            if (logReadingButton) logReadingButton.style.display = "none";
        }
    });
</script>
